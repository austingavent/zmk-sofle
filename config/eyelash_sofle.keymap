#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    tappreferkps: tappreferkps {
        compatible = "zmk,behavior-hold-tap";
        label = "TAPPREFERKPS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <250>;
        quick-tap-ms = <175>;
        flavor = "tap-preferred";
    };

    george: george {
        compatible = "zmk,behavior-hold-tap";
        label = "GEORGE";
        bindings = <&none>, <&none>;

        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
    };

    macros {
        double_parenthesis: double_parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;
            label = "DOUBLE_PARENTHESIS";
        };

        double_bracket: double_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET>;
            label = "DOUBLE_BRACKET";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 2 ESCAPE    &tappreferkps EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &kp N3                  &kp N4     &kp N5                              &kp UP_ARROW    &kp N6                          &kp N7       &kp N8              &kp N9                             &kp N0                                   &kp COLON
&kp TAB         &kp Q                               &kp W                 &kp E                   &kp R      &kp T                               &kp DOWN        &kp Y                           &kp U        &kp I               &kp O                              &kp P                                    &kp BSLH
&kp LEFT_SHIFT  &kp A                               &kp S                 &kp D                   &kp F      &kp G                               &kp LEFT_ARROW  &kp H                           &kp J        &kp K               &kp L                              &kp SEMI                                 &kp APOS
&lt 3 CAPS      &kp Z                               &kp X                 &kp C                   &kp V      &kp B                               &kp RIGHT       &kp N                           &kp M        &kp COMMA           &kp DOT                            &kp FSLH                                 &kp ENTER
&kp PAGE_DOWN   &kp LCTRL                           &mt LEFT_ALT DELETE   &mt LEFT_COMMAND ENTER  &lt 1 F13  &tappreferkps LEFT_ALT BACKSPACE    &kp LG(A)       &tappreferkps LEFT_SHIFT SPACE  &lt 1 ENTER  &lt 2 LG(LEFT_ALT)  &mt LEFT_BRACKET LEFT_PARENTHESIS  &mt RIGHT_PARENTHESIS RIGHT_PARENTHESIS
            >;

            sensor-bindings = <&scroll_encoder>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp RCLK        &mkp LCLK        &mkp RCLK        &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6        &kp F7          &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans        &trans          &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &bt BT_SEL 1  &bt BT_CLR_ALL  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans        &trans          &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans        &trans          &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans                    &trans                     &trans         &trans  &trans    &kp LG(RIGHT_BRACKET)      &kp N7        &kp N8        &kp N9        &trans  &trans  &trans
&trans  &trans                    &trans                     &trans         &trans  &trans    &kp LG(LEFT_BRACKET)       &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans  &trans
&trans  &kp LG(LEFT_BRACKET)      &kp LG(RIGHT_BRACKET)      &trans         &trans  &trans    &kp LS(LG(LEFT_BRACKET))   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans  &trans
&trans  &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))  &kp LA(LG(C))  &trans  &trans    &kp LS(LG(RIGHT_BRACKET))  &kp PERIOD    &trans        &trans        &trans  &trans  &trans
&trans  &trans                    &trans                     &trans         &trans  &trans    &mkp MCLK                  &kp ENTER     &kp NUMBER_0  &trans        &trans  &trans
            >;
        };
    };
};
